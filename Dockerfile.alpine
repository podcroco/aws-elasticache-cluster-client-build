FROM alpine:3.13

RUN apk add bash

SHELL ["/bin/bash", "-c"]

# can be 7.1 or later:
ARG PHP_VERSION=8
# set to 1 to enable:
ARG ENABLE_IGBINARY=1
# set to 1 to enable:
ARG ENABLE_MSGPACK=1
# set to 1 to enable:
ARG ENABLE_JSON=1

RUN apk add alpine-sdk bash automake autoconf patch libtool libstdc++ php8-cli php8-dev libevent-dev zlib-dev php8-pecl-igbinary php8-pecl-msgpack
RUN ln -s /usr/bin/php-config8 /usr/bin/php-config
RUN ln -s /usr/bin/php8 /usr/bin/php
RUN ln -s /usr/bin/phpize8 /usr/bin/phpize
RUN mkdir /build

COPY aws-elasticache-cluster-client-libmemcached /build/aws-elasticache-cluster-client-libmemcached
COPY aws-elasticache-cluster-client-memcached-for-php /build/aws-elasticache-cluster-client-memcached-for-php
COPY *.patch /build/

RUN cd /build/aws-elasticache-cluster-client-libmemcached \
    && for F in /build/*.patch; do patch -p1 -i "$F"; done \
    && autoreconf -i \
    && mkdir BUILD \
    && cd BUILD \
    && ../configure --prefix=/usr/local --with-pic --disable-sasl \
    && make -j`nproc` \
    && make install

RUN cd /build/aws-elasticache-cluster-client-memcached-for-php \
    && phpize8 \
    && ./configure \
        --with-pic \
        --disable-memcached-sasl \
        --enable-memcached-session \
        --enable-memcached-json \
        --enable-memcached-msgpack \
        --enable-memcached-igbinary \
        --enable-memcached \
        --with-libmemcached-dir=/usr/local \
        --enable-static=memcached \
    && sed -i "s#-lmemcached -lmemcachedutil# /usr/local/lib/libmemcachedutil.a /usr/local/lib/libmemcached.a -lcrypt -lpthread -lm -lstdc++#" Makefile \
    && make -j`nproc` \
    && make install

# clean slate for checks:
RUN rm -rf /build

# check that the PHP extension is statically linked to libmemcached:

# check that the PHP extension can be loaded:
RUN php -v \
    && php -dextension=memcached.so -m | grep 'memcached' \
    && php -dextension=memcached.so -r 'new Memcached();' \
    && php -dextension=memcached.so -r 'if (!defined("Memcached::DYNAMIC_CLIENT_MODE")) exit(1);'

RUN mkdir -p /build/final \
    && cp -p `find /usr/lib/php8/ -name memcached.so` /build/final/
